name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  create-release:
    runs-on: ubuntu-latest
    name: Create Release
    
    permissions:
      contents: write
      
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build application
      run: npm run build -- --configuration production
      
    - name: Create distribution package
      run: |
        cd dist
        zip -r ../control-personal-${{ github.ref_name }}.zip .
        cd ..
        
    - name: Generate changelog
      id: changelog
      run: |
        PREVIOUS_TAG=$(git describe --tags --abbrev=0 HEAD~1 2>/dev/null || echo "")
        if [ -z "$PREVIOUS_TAG" ]; then
          CHANGELOG=$(git log --pretty=format:"- %s (%h)" --no-merges)
        else
          CHANGELOG=$(git log $PREVIOUS_TAG..HEAD --pretty=format:"- %s (%h)" --no-merges)
        fi
        echo "changelog<<EOF" >> $GITHUB_OUTPUT
        echo "$CHANGELOG" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT
        
    - name: Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }}
        release_name: Release ${{ github.ref_name }}
        body: |
          ## 🚀 Control Personal ${{ github.ref_name }}
          
          ### 📋 Changelog
          ${{ steps.changelog.outputs.changelog }}
          
          ### 📦 Archivos incluidos
          - `control-personal-${{ github.ref_name }}.zip` - Aplicación compilada para producción
          
          ### 🔧 Instrucciones de instalación
          1. Descargar el archivo ZIP
          2. Extraer en servidor web
          3. Configurar servidor para servir archivos estáticos
          
          ### 🌐 Demo en vivo
          [Ver aplicación](https://control-personal.netlify.app)
        draft: false
        prerelease: ${{ contains(github.ref_name, 'alpha') || contains(github.ref_name, 'beta') || contains(github.ref_name, 'rc') }}
        
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./control-personal-${{ github.ref_name }}.zip
        asset_name: control-personal-${{ github.ref_name }}.zip
        asset_content_type: application/zip

  deploy-production:
    runs-on: ubuntu-latest
    name: Deploy to Production
    needs: create-release
    
    environment:
      name: production
      url: https://control-personal.netlify.app
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build for production
      run: npm run build -- --configuration production
      
    - name: Deploy to Production
      uses: netlify/actions/cli@master
      with:
        args: deploy --prod --dir=dist/control-personal
      env:
        NETLIFY_SITE_ID: ${{ secrets.NETLIFY_PRODUCTION_SITE_ID }}
        NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
        
    - name: Notify deployment
      run: |
        echo "## 🎉 Deployment Successful!" >> $GITHUB_STEP_SUMMARY
        echo "- **Version**: ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
        echo "- **URL**: https://control-personal.netlify.app" >> $GITHUB_STEP_SUMMARY
        echo "- **Time**: $(date)" >> $GITHUB_STEP_SUMMARY
